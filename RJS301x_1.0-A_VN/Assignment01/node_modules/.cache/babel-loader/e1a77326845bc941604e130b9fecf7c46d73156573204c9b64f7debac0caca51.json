{"ast":null,"code":"import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport format from \"../format/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to format\r\n * @param {Date|Number} baseDate - the date to compare with\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {String} the date in words\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `date` must not be Invalid Date\r\n * @throws {RangeError} `baseDate` must not be Invalid Date\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n * @throws {RangeError} `options.locale` must contain `localize` property\r\n * @throws {RangeError} `options.locale` must contain `formatLong` property\r\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(addDays(new Date(), -6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var _ref = dirtyOptions || {},\n    _ref$locale = _ref.locale,\n    locale = _ref$locale === void 0 ? defaultLocale : _ref$locale,\n    _ref$weekStartsOn = _ref.weekStartsOn,\n    weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n  var diff = differenceInCalendarDays(date, baseDate);\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n  var token;\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(date, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n}","map":{"version":3,"names":["differenceInCalendarDays","format","defaultLocale","subMilliseconds","toDate","getTimezoneOffsetInMilliseconds","requiredArgs","formatRelative","dirtyDate","dirtyBaseDate","dirtyOptions","arguments","date","baseDate","_ref","_ref$locale","locale","_ref$weekStartsOn","weekStartsOn","localize","RangeError","formatLong","diff","isNaN","token","utcDate","utcBaseDate","formatStr"],"sources":["C:/Users/POSEIDON/Desktop/Funix/Fnuix/RJS301x_1.0-A_VN/Assignment01/node_modules/date-fns/esm/formatRelative/index.js"],"sourcesContent":["import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\r\nimport format from \"../format/index.js\";\r\nimport defaultLocale from \"../locale/en-US/index.js\";\r\nimport subMilliseconds from \"../subMilliseconds/index.js\";\r\nimport toDate from \"../toDate/index.js\";\r\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n\r\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to format\r\n * @param {Date|Number} baseDate - the date to compare with\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {String} the date in words\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `date` must not be Invalid Date\r\n * @throws {RangeError} `baseDate` must not be Invalid Date\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n * @throws {RangeError} `options.locale` must contain `localize` property\r\n * @throws {RangeError} `options.locale` must contain `formatLong` property\r\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(addDays(new Date(), -6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\r\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\r\n  requiredArgs(2, arguments);\r\n  var date = toDate(dirtyDate);\r\n  var baseDate = toDate(dirtyBaseDate);\r\n\r\n  var _ref = dirtyOptions || {},\r\n      _ref$locale = _ref.locale,\r\n      locale = _ref$locale === void 0 ? defaultLocale : _ref$locale,\r\n      _ref$weekStartsOn = _ref.weekStartsOn,\r\n      weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;\r\n\r\n  if (!locale.localize) {\r\n    throw new RangeError('locale must contain localize property');\r\n  }\r\n\r\n  if (!locale.formatLong) {\r\n    throw new RangeError('locale must contain formatLong property');\r\n  }\r\n\r\n  if (!locale.formatRelative) {\r\n    throw new RangeError('locale must contain formatRelative property');\r\n  }\r\n\r\n  var diff = differenceInCalendarDays(date, baseDate);\r\n\r\n  if (isNaN(diff)) {\r\n    throw new RangeError('Invalid time value');\r\n  }\r\n\r\n  var token;\r\n\r\n  if (diff < -6) {\r\n    token = 'other';\r\n  } else if (diff < -1) {\r\n    token = 'lastWeek';\r\n  } else if (diff < 0) {\r\n    token = 'yesterday';\r\n  } else if (diff < 1) {\r\n    token = 'today';\r\n  } else if (diff < 2) {\r\n    token = 'tomorrow';\r\n  } else if (diff < 7) {\r\n    token = 'nextWeek';\r\n  } else {\r\n    token = 'other';\r\n  }\r\n\r\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\r\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\r\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {\r\n    locale: locale,\r\n    weekStartsOn: weekStartsOn\r\n  });\r\n  return format(date, formatStr, {\r\n    locale: locale,\r\n    weekStartsOn: weekStartsOn\r\n  });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}