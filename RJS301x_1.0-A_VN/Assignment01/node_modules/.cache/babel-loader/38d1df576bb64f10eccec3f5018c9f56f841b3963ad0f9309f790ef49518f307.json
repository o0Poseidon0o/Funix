{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\r\n * @name endOfWeek\r\n * @category Week Helpers\r\n * @summary Return the end of a week for the given date.\r\n *\r\n * @description\r\n * Return the end of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the end of a week\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // The end of a week for 2 September 2014 11:55:00:\r\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 23:59:59.999\r\n *\r\n * @example\r\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\r\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","map":{"version":3,"names":["toDate","toInteger","requiredArgs","endOfWeek","dirtyDate","dirtyOptions","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","getDay","diff","setDate","getDate","setHours"],"sources":["C:/Users/POSEIDON/Desktop/Funix/Fnuix/RJS301x_1.0-A_VN/Assignment01/node_modules/date-fns/esm/endOfWeek/index.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport toInteger from \"../_lib/toInteger/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n\r\n/**\r\n * @name endOfWeek\r\n * @category Week Helpers\r\n * @summary Return the end of a week for the given date.\r\n *\r\n * @description\r\n * Return the end of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the end of a week\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // The end of a week for 2 September 2014 11:55:00:\r\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 23:59:59.999\r\n *\r\n * @example\r\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\r\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\r\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\r\n  requiredArgs(1, arguments);\r\n  var options = dirtyOptions || {};\r\n  var locale = options.locale;\r\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\r\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\r\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\r\n\r\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\r\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\r\n  }\r\n\r\n  var date = toDate(dirtyDate);\r\n  var day = date.getDay();\r\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\r\n  date.setDate(date.getDate() + diff);\r\n  date.setHours(23, 59, 59, 999);\r\n  return date;\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,SAAS,CAACC,SAAS,EAAEC,YAAY,EAAE;EACzDH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,IAAIC,OAAO,GAAGF,YAAY,IAAI,CAAC,CAAC;EAChC,IAAIG,MAAM,GAAGD,OAAO,CAACC,MAAM;EAC3B,IAAIC,kBAAkB,GAAGD,MAAM,IAAIA,MAAM,CAACD,OAAO,IAAIC,MAAM,CAACD,OAAO,CAACG,YAAY;EAChF,IAAIC,mBAAmB,GAAGF,kBAAkB,IAAI,IAAI,GAAG,CAAC,GAAGR,SAAS,CAACQ,kBAAkB,CAAC;EACxF,IAAIC,YAAY,GAAGH,OAAO,CAACG,YAAY,IAAI,IAAI,GAAGC,mBAAmB,GAAGV,SAAS,CAACM,OAAO,CAACG,YAAY,CAAC,CAAC,CAAC;;EAEzG,IAAI,EAAEA,YAAY,IAAI,CAAC,IAAIA,YAAY,IAAI,CAAC,CAAC,EAAE;IAC7C,MAAM,IAAIE,UAAU,CAAC,kDAAkD,CAAC;EAC1E;EAEA,IAAIC,IAAI,GAAGb,MAAM,CAACI,SAAS,CAAC;EAC5B,IAAIU,GAAG,GAAGD,IAAI,CAACE,MAAM,EAAE;EACvB,IAAIC,IAAI,GAAG,CAACF,GAAG,GAAGJ,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAII,GAAG,GAAGJ,YAAY,CAAC;EACnEG,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,OAAO,EAAE,GAAGF,IAAI,CAAC;EACnCH,IAAI,CAACM,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC9B,OAAON,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}